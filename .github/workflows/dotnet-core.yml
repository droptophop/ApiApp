jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: dotnet build # compile
  
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover # unit testing

  analyze:
    needs: [build, test]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: git fetch --unshallow
      - run: dotnet tool install --global dotnet-sonarscanner
      - run: | # multiline value with each line ending with a newline character \n
          dotnet sonarscanner begin -o:'droptophop' -k:'droptophop_ApiApp' -d:sonar.login="f0b883386031a63a0f443a4194e5ed215482d624" -d:sonar.host.url='https://sonarcloud.io/'
          dotnet build
          dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover --logger trx
          dotnet sonarscanner end -d:sonar.login='f0b883386031a63a0f443a4194e5ed215482d624'
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  package:
    env:
      DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
    needs: [analyze]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: docker login --username ${DOCKER_LOGIN} --password ${DOCKER_TOKEN}
      - run: docker image build -f dockerfile -t apiapp .
      - run: docker image tag apiapp hdhopson/apiapp
      - run: docker image push hdhopson/apiapp
      - run: docker logout

  # deploy:

name: cibuild

on:
  push